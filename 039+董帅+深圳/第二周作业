#灰度图
import cv2
import numpy as np
img_read=cv2.imread('lenna.png')#读图片
img_process=cv2.cvtColor(img_read,cv2.COLOR_BGR2RGB)#转换成RGB
height,width,channes=img_process.shape#得到图片尺寸
img_gray=np.zeros((height,width),dtype=np.uint8)#创立和原图一样空的矩阵
for i in range(height):
    for j in range(width):
        img_gray[i,j]=int(0.3*img_process[i,j,0]+0.59*img_process[i,j,1]+0.11*img_process[i,j,2])#灰度化

print(img_gray)
print(img_process)
print(f'''image show gray: {img_gray}''')
cv2.imshow('image show gray',img_gray)
cv2.imshow('original',img_read)
cv2.waitKey(0)
cv2.destroyAllWindows()

# 二值化

# img_binary=np.zeros((height,width),dtype=np.uint8)
# img_new = img_gray.astype(np.float)/255.0
# for i in range(height):
#     for j in range(width):
#         if (img_new[i,j] < 0.5):
#             img_binary[i, j] = 0
#         else:
#             img_binary[i, j] = 255
# cv2.imshow('binary image is :',img_binary)
_, img_binary=cv2.threshold(img_gray,127,255,cv2.THRESH_BINARY)
cv2.imshow('binary:',img_binary)
cv2.waitKey(0)
cv2.destroyAllWindows()
    
#插值法
import cv2
import numpy as np

# def zoomin_out(target_height, target_width):
#     height, width, channels, = image_read.shape
#     empty_image = np.zeros((target_height, target_width, channels), dtype=np.uint8)
#     h_changerate = target_height / height
#     w_changerate = target_width / width
#     for i in range(target_height):
#         for j in range(target_width):
#             empty_image[i,j]=image_read[int(i/h_changerate+0.5),int(j/w_changerate+0.5)]
#     return empty_image
#
# image_read=cv2.imread('lenna.png')
# target_height=int(input('the height you want:'))
# target_width=int(input('the width you want:'))
# target_img=zoomin_out(target_height,target_width)
# cv2.imshow('insert:',target_img)
# cv2.waitKey(5000)
# cv2.destroyAllWindows()

#快捷方式
img_read1=cv2.imread('lenna.png')
img_resize=cv2.resize(img_read1,(800,800))
cv2.imshow('resized image',img_resize)
